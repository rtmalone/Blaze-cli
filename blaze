#!/usr/bin/env ruby

$LOAD_PATH << "lib"
$LOAD_PATH << "models"

require 'trail'
require 'environment'
require 'colorize'

Environment.environment = ENV["ENVIRONMENT"] || "production"

# ------ Menu methods ------

def primary_menu
  puts "_-_ Welcome to Blaze-cli! _-_".green
  puts main_menu_choices
end

def secondary_menu
  puts "What would you like to do now?".green
  puts main_menu_choices
end

def main_menu_choices
  puts <<-EOS

Please choose a number:
  <1> Log a trail
  <2> View log
  <3> Search log
  <4> Quit Blaze-cli
EOS
get_menu_selection
end

def get_menu_selection
  input = gets
  return unless input
  input.chomp!
  if input == "1"
    add_trail
  elsif input == "2"
    show_log
  elsif input == "3"
    search_log
  elsif input == "4"
    puts "Happy Trails!".red
    exit
  else
    puts "'#{input}' is not valid. Please try again."
    get_menu_selection
  end
end

# ------ Methods called by get_menu_selection ------

def show_log
  puts "Your Blaze-cli trail log:".green.center(90)
  puts "Trail ID | Name | Activity | Distance Covered | Trail Class | Type | Park | State | Notes"
  Trail.print_log.map {|trail| puts "#{Trail.join_string(trail).green}"}

  puts log_options
end

def search_log
  puts "Select what criteria you'd like to search:"
end

def add_trail
  puts "What is the trail name?".green.underline
  trail_name = gets.chomp!
  return unless trail_name

  puts "Enter date(s) on trail:".green.underline
  date = gets.chomp!

  puts activity_menu
  activity_type = gets.chomp!

  puts "Enter distance covered:".green.underline
  length = gets.chomp!

  puts trail_class_menu
  difficulty = gets.chomp!

  puts trail_type_menu
  trail_type = gets.chomp!

  puts "Enter park name:".green.underline
  park = gets.chomp!

  puts "Enter state:".green.underline
  state = gets.chomp!

  puts "Record any notes about #{trail_name}:".green.underline
  notes = gets.chomp!

  trail = Trail.new(trail_name, date, activity_type,
                    length, difficulty, trail_type,
                    park, state, notes)
  if trail.save
    puts "'#{trail_name}' has been added to your log!".red.on_green
    secondary_menu
  else
    puts injury.errors
    add_trail
  end
end

# ------ Adding a trail helper methods ------

def activity_menu
  puts "Choose activity type:".green.underline
  puts <<-EOS

  <1> Hike
  <2> Run
  <3> Bike
EOS
end

def trail_class_menu
  puts "Choose the trail class:".green.underline
  puts <<-EOS

  <1> Class 1 - Minimally Developed
  <2> Class 2 - Moderately Developed
  <3> Class 3 - Developed
  <4> Class 4 - Highly Developed
  <5> Class 5 - Fully Developed
EOS
end

def trail_type_menu
  puts "What was the trail type?".green.underline
  puts <<-EOS

  <1> Loop
  <2> Semi-Loop
  <3> Out and back
  <4> Point to point
EOS
end

def log_options
  puts "Options:"
  puts "<1> Add Trail  <2> Edit Trail  <3> Delete Trail  <4> Search Log  <5> Quit Blaze-cli"
  input = gets.chomp!
  return unless input
  if input == "1"
    add_trail
  elsif input == "2"
    edit_trail
  elsif input == "3"
    delete_trail
  elsif input == "4"
    search_log
  elsif input == "5"
    puts "Happy Trails!".red
    exit
  else
    puts "'#{input}' is not valid. Please try again."
    show_log
  end
end

def delete_trail
  puts "Enter the ID of the trail you wish to delete:".red
  id = gets.chomp!
  puts "Are you sure you want to continue? (y/n)".red
  response = gets.chomp!
  if response == "y"
    Trail.delete(id)
    puts "Trail record was deleted".red
    show_log
  else
    show_log
  end
end

primary_menu
